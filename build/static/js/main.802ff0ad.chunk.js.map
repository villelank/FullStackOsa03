{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","deletePersonURL","concat","delete","updatePersonUrl","put","Person","name","number","deletePerson","onClick","Persons","persons","newFilter","filter","person","toLowerCase","includes","map","key","Filter","filterValue","handleFilterChange","value","onChange","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","style","fontSize","fontWeight","borderStyle","borderColor","background","padding","margin","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","console","log","personService","initialPersons","catch","error","event","target","preventDefault","isInListId","isInList","forEach","confirmMsg","window","confirm","nameObject","returnedPerson","setTimeout","personToDelete","returned","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uPAEMA,EAAU,eAwBD,EAtBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoB5B,EAjBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAe5B,EAZM,SAACG,GACpB,IAAMC,EAAkBT,EAAQU,OAAO,IAAKF,GAE5C,OADgBP,IAAMU,OAAOF,GACdN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACG,EAAIF,GAClB,IAAMM,EAAkBZ,EAAQU,OAAO,IAAKF,GAE5C,OADgBP,IAAMY,IAAID,EAAiBN,GAC5BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCb5BS,EARA,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQR,EAAsB,EAAtBA,GAAIS,EAAkB,EAAlBA,aACjC,OACA,2BACGF,EADH,IACUC,EADV,IACkB,4BAAQE,QAAS,kBAAMD,EAAaT,KAApC,YCKLW,EAPC,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,UAAWJ,EAAkB,EAAlBA,aACpC,OACAG,EAAQE,QAAO,SAAAC,GAAM,OAAIA,EAAOR,KAAKS,cAAcC,SAASJ,EAAUG,kBACnEE,KAAI,SAAAH,GAAM,OAAI,kBAAC,EAAD,CAAQI,IAAKJ,EAAOR,KAAMA,KAAMQ,EAAOR,KAAMC,OAAQO,EAAOP,OAAQR,GAAIe,EAAOf,GAAIS,aAAcA,QCIrGW,EAPA,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,mBAAf,OACb,kDACoB,2BAAOC,MAAOF,EAAaG,SAAUF,MCW5CG,EAdI,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,UAAWC,EAA/B,EAA+BA,iBAAkBC,EAAjD,EAAiDA,mBAAjD,OACjB,0BAAMC,SAAUL,GACd,sCACQ,2BAAOH,MAAOI,EAASH,SAAUK,KAEzC,wCACU,2BAAON,MAAOK,EAAWJ,SAAUM,KAE7C,6BACE,4BAAQE,KAAK,UAAb,UC6BSC,EAtCM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAASF,EAAW,EAAXA,KAqB/B,OAAe,OAAZE,EACM,KAEG,UAATF,EAEC,yBAAKG,MAfU,CACjBC,SAAU,KACVC,WAAY,OACZC,YAAa,QACbC,YAAa,MACbC,WAAY,UACZC,QAAS,GACTC,OAAQ,KASHR,GAKL,yBAAKC,MA/BmB,CACxBC,SAAU,KACVC,WAAY,OACZC,YAAa,QACbC,YAAa,QACbC,WAAY,UACZC,QAAS,GACTC,OAAQ,KAyBLR,ICgGQS,EA5HH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRhC,EADQ,KACCiC,EADD,OAEgBD,mBAAS,IAFzB,mBAERjB,EAFQ,KAECmB,EAFD,OAGoBF,mBAAS,IAH7B,mBAGRhB,EAHQ,KAGGmB,EAHH,OAIoBH,mBAAS,IAJ7B,mBAIR/B,EAJQ,KAIGmC,EAJH,OAKgBJ,mBAAS,CAAC,KAAM,OALhC,mBAKRV,EALQ,KAKCe,EALD,KAmBhBC,qBAZa,WACXC,QAAQC,IAAI,UACZC,IAEK1D,MAAK,SAAA2D,GACJT,EAAWS,MAEZC,OAAM,SAAAC,GACLP,EAAW,CAAC,gCAAiC,eAIrC,IA2FhB,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcf,QAASA,EAAQ,GAAIF,KAAME,EAAQ,KACjD,kBAAC,EAAD,CAAQb,YAAaR,EAAWS,mBAvFT,SAACmC,GAC1BT,EAAaS,EAAMC,OAAOnC,UAuFxB,yCACA,kBAAC,EAAD,CAAYG,QAhEA,SAAC+B,GACfA,EAAME,iBACN,IACIC,EADAC,GAAW,EASf,GAPAjD,EAAQkD,SAAQ,SAAA/C,GACXA,EAAOR,OAASoB,IACjBkC,GAAS,EACTD,EAAa7C,EAAOf,OAIrB6D,EAAS,CACV,IAAME,EAAU,UAAMpC,EAAN,0EAChB,GAAGqC,OAAOC,QAAQF,GAAY,CAC5B,IAAMG,EAAa,CACjB3D,KAAMoB,EACNnB,OAAQoB,GAEVyB,EACUO,EAAYM,GACjBvE,MAAK,SAAAwE,GACJtB,EAAWjC,EAAQM,KAAI,SAAAH,GAAM,OAAIA,EAAOf,KAAO4D,EAAa7C,EAASoD,MACrElB,EAAW,CAAC,eAAckB,EAAe5D,KAAO,kCAAgC,OAChF6D,YAAW,WACTnB,EAAW,CAAC,KAAM,SACjB,QAEJM,OAAM,SAAAC,GACLP,EAAW,CAAC,sDAAyCiB,EAAW3D,KAAO,kCAA6B,UACpGsC,EAAWjC,EAAQE,QAAO,SAAAC,GAAM,OAAIA,EAAOf,KAAO4D,SAExDd,EAAW,IACXC,EAAa,SAGV,CACH,IAAMmB,EAAa,CACjB3D,KAAMoB,EACNnB,OAAQoB,GAEVyB,EACUa,GACLvE,MAAK,SAAAwE,GACJtB,EAAWjC,EAAQV,OAAOiE,IAC1BlB,EAAW,CAAC,cAAakB,EAAe5D,KAAO,sBAAsB,OACrE6D,YAAW,WACTnB,EAAW,CAAC,KAAM,SACjB,QAEJM,OAAM,SAAAC,GACLP,EAAW,CAAC,eAAciB,EAAW3D,KAAO,mCAA2B,UACvEsC,EAAWjC,MAEjBkC,EAAW,IACXC,EAAa,MAUepB,QAASA,EAASC,UAAWA,EAAWC,iBA/FjD,SAAC4B,GACxBX,EAAWW,EAAMC,OAAOnC,QA8FoFO,mBA5FnF,SAAC2B,GAC1BV,EAAaU,EAAMC,OAAOnC,UA4FxB,uCACA,kBAAC,EAAD,CAASX,QAASA,EAASC,UAAWA,EAAWJ,aAvFhC,SAACT,GACpB,IAAMqE,EAAiBzD,EAAQE,QAAO,SAAAC,GAAM,OAAIA,EAAOf,KAAOA,KAC3DgE,OAAOC,QAAQ,yCAAwCI,EAAe,GAAG9D,KAAO,0BACjF4C,QAAQC,IAAI,aAAciB,EAAe,GAAG9D,MAC5C8C,EACcrD,GACbL,MAAK,SAAA2E,GACJzB,EAAWjC,EAAQE,QAAO,SAAAC,GAAM,OAAIA,EAAOf,KAAOA,MAClDiD,EAAW,CAACoB,EAAe,GAAG9D,KAAO,mCAAoC,OACzE6D,YAAW,WACTnB,EAAW,CAAC,KAAM,SACjB,QAEJM,OAAM,SAAAC,GACLP,EAAW,CAAC,eAAcoB,EAAe,GAAG9D,KAAO,6BAA8B,UACjFsC,EAAWjC,EAAQE,QAAO,SAAAC,GAAM,OAAIA,EAAOf,KAAOA,eCzCtCuE,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtF,MAAK,SAAAuF,GACjCA,EAAaC,kB","file":"static/js/main.802ff0ad.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const deletePersonURL = baseUrl.concat('/', id)\n  const request = axios.delete(deletePersonURL)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const updatePersonUrl = baseUrl.concat('/', id)\n  const request = axios.put(updatePersonUrl, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }","import React from 'react'\n\nconst Person = ({name, number, id, deletePerson}) => {\n  return(\n  <p>\n    {name} {number} <button onClick={() => deletePerson(id)}>delete</button>\n  </p>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, newFilter, deletePerson}) => {\n  return (\n  persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n    .map(person => <Person key={person.name} name={person.name} number={person.number} id={person.id} deletePerson={deletePerson}/>)\n  )\n}\n\nexport default Persons","import React from 'react'\n\n\nconst Filter = ({filterValue, handleFilterChange}) => (\n  <div>\n    filter shown with <input value={filterValue} onChange={handleFilterChange}/>\n  </div>\n)\n  \n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addName, newName, newNumber, handleNameChange, handleNumberChange}) => (\n  <form onSubmit={addName}>\n    <div>\n      name: <input value={newName} onChange={handleNameChange}/>\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  const notificationStyle = {\n    fontSize: '18',\n    fontWeight: 'bold',\n    borderStyle: 'solid',\n    borderColor: 'green',\n    background: '#c5cfc4',\n    padding: 12,\n    margin: 10\n  }\n\n  const errorStyle = {\n    fontSize: '18',\n    fontWeight: 'bold',\n    borderStyle: 'solid',\n    borderColor: 'red',\n    background: '#ffe2e0',\n    padding: 12,\n    margin: 10\n  }\n \n  if(message === null) {\n    return null\n  }\n  if(type === 'error') {\n    return (\n      <div style={errorStyle}>\n        {message}\n      </div>\n    )\n  }\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons.js'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState([null, null])\n\n  const hook = () => {\n    console.log('effect')\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n        .catch(error => {\n          setMessage(['Tietoja ei saatu palvelimelta', 'error'])\n        })\n  }\n\n  useEffect(hook, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n  \n  const deletePerson = (id) => {\n    const personToDelete = persons.filter(person => person.id === id)\n    if(window.confirm('Haluatko varmasti poistaa henkilön ' + personToDelete[0].name + ' puhelinluettelosta?')){\n      console.log('poistetaan', personToDelete[0].name)\n      personService\n      .deletePerson(id)\n      .then(returned => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage([personToDelete[0].name + ' on poistettu puhelinluettelosta', 'ok'])\n        setTimeout(() => {\n          setMessage([null, null])\n        }, 5000);\n      })\n      .catch(error => {\n        setMessage(['Henkilön ' + personToDelete[0].name + ' poistaminen ei onnistunut', 'error'])\n        setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n    \n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    let isInList = false\n    let isInListId;\n    persons.forEach(person => {\n      if(person.name === newName) {\n        isInList=true\n        isInListId = person.id\n      } \n    });\n\n    if(isInList){\n      const confirmMsg = `${newName} on jo puhelinluettelossa. Haluatko vaihtaa hänen puhelinnumeronsa?`\n      if(window.confirm(confirmMsg)){\n        const nameObject = {\n          name: newName,\n          number: newNumber\n        }\n        personService\n          .update(isInListId, nameObject)\n            .then(returnedPerson => {\n              setPersons(persons.map(person => person.id !== isInListId ? person : returnedPerson))\n              setMessage(['Henkilön ' + returnedPerson.name + ' puhelinnumero on päivitetty', 'ok'])\n              setTimeout(() => {\n                setMessage([null, null])\n              }, 5000);\n            })\n            .catch(error => {\n              setMessage(['Päivittäminen epäonnistui. Henkilöä ' + nameObject.name + ' ei enää ole palvelimella', 'error'])\n              setPersons(persons.filter(person => person.id !== isInListId))\n            })\n        setNewName('')\n        setNewNumber('')\n      }\n      \n    } else {\n        const nameObject = {\n          name: newName,\n          number: newNumber\n        }\n        personService\n          .create(nameObject)\n            .then(returnedPerson => {\n              setPersons(persons.concat(returnedPerson))\n              setMessage(['Lisätty ' + returnedPerson.name + '  puhelinluetteloon','ok'])\n              setTimeout(() => {\n                setMessage([null, null])\n              }, 5000);\n            })\n            .catch(error => {\n              setMessage(['Henkilön ' + nameObject.name + ' lisääminen epäonnistui', 'error'])\n              setPersons(persons)\n            })\n        setNewName('')\n        setNewNumber('')\n      }         \n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message[0]} type={message[1]}/>\n      <Filter filterValue={newFilter} handleFilterChange={handleFilterChange}/>\n      <h3>add a new</h3>\n      <PersonForm addName={addName} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>      \n      <h3>Numbers</h3>\n      <Persons persons={persons} newFilter={newFilter} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}